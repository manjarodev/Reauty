// Generated by view binder compiler. Do not edit!
package com.app.blingy.reauty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.app.blingy.reauty.R;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout FollowingView;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolsBar;

  @NonNull
  public final TextView followersTV;

  @NonNull
  public final ConstraintLayout followersView;

  @NonNull
  public final TextView followingTV;

  @NonNull
  public final Guideline guideline9;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final Toolbar myToolbar;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final ConstraintLayout postView;

  @NonNull
  public final TextView postsTV;

  @NonNull
  public final ShapeableImageView profileImage;

  @NonNull
  public final TextView profileUsername;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView shortBiography;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final ViewPager2 viewpager;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout FollowingView, @NonNull CollapsingToolbarLayout collapsingToolsBar,
      @NonNull TextView followersTV, @NonNull ConstraintLayout followersView,
      @NonNull TextView followingTV, @NonNull Guideline guideline9,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout3,
      @NonNull Toolbar myToolbar, @NonNull NestedScrollView nestedScrollView,
      @NonNull ConstraintLayout postView, @NonNull TextView postsTV,
      @NonNull ShapeableImageView profileImage, @NonNull TextView profileUsername,
      @NonNull ProgressBar progressBar, @NonNull TextView shortBiography,
      @NonNull TabLayout tabLayout, @NonNull ViewPager2 viewpager) {
    this.rootView = rootView;
    this.FollowingView = FollowingView;
    this.collapsingToolsBar = collapsingToolsBar;
    this.followersTV = followersTV;
    this.followersView = followersView;
    this.followingTV = followingTV;
    this.guideline9 = guideline9;
    this.linearLayout = linearLayout;
    this.linearLayout3 = linearLayout3;
    this.myToolbar = myToolbar;
    this.nestedScrollView = nestedScrollView;
    this.postView = postView;
    this.postsTV = postsTV;
    this.profileImage = profileImage;
    this.profileUsername = profileUsername;
    this.progressBar = progressBar;
    this.shortBiography = shortBiography;
    this.tabLayout = tabLayout;
    this.viewpager = viewpager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FollowingView;
      ConstraintLayout FollowingView = ViewBindings.findChildViewById(rootView, id);
      if (FollowingView == null) {
        break missingId;
      }

      id = R.id.collapsing_tools_bar;
      CollapsingToolbarLayout collapsingToolsBar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolsBar == null) {
        break missingId;
      }

      id = R.id.followersTV;
      TextView followersTV = ViewBindings.findChildViewById(rootView, id);
      if (followersTV == null) {
        break missingId;
      }

      id = R.id.followersView;
      ConstraintLayout followersView = ViewBindings.findChildViewById(rootView, id);
      if (followersView == null) {
        break missingId;
      }

      id = R.id.followingTV;
      TextView followingTV = ViewBindings.findChildViewById(rootView, id);
      if (followingTV == null) {
        break missingId;
      }

      id = R.id.guideline9;
      Guideline guideline9 = ViewBindings.findChildViewById(rootView, id);
      if (guideline9 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.myToolbar;
      Toolbar myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }

      id = R.id.nested_scrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.postView;
      ConstraintLayout postView = ViewBindings.findChildViewById(rootView, id);
      if (postView == null) {
        break missingId;
      }

      id = R.id.postsTV;
      TextView postsTV = ViewBindings.findChildViewById(rootView, id);
      if (postsTV == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ShapeableImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profileUsername;
      TextView profileUsername = ViewBindings.findChildViewById(rootView, id);
      if (profileUsername == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.shortBiography;
      TextView shortBiography = ViewBindings.findChildViewById(rootView, id);
      if (shortBiography == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager2 viewpager = ViewBindings.findChildViewById(rootView, id);
      if (viewpager == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, FollowingView,
          collapsingToolsBar, followersTV, followersView, followingTV, guideline9, linearLayout,
          linearLayout3, myToolbar, nestedScrollView, postView, postsTV, profileImage,
          profileUsername, progressBar, shortBiography, tabLayout, viewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
