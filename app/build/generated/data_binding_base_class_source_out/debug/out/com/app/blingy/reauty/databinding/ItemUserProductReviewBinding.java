// Generated by view binder compiler. Do not edit!
package com.app.blingy.reauty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.blingy.reauty.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUserProductReviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline12;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ShapeableImageView itemProductImgReview;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView productNamePf;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private ItemUserProductReviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guideline12, @NonNull ImageView imageView,
      @NonNull ShapeableImageView itemProductImgReview, @NonNull LinearLayout linearLayout,
      @NonNull TextView productNamePf, @NonNull TextView textView, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.guideline12 = guideline12;
    this.imageView = imageView;
    this.itemProductImgReview = itemProductImgReview;
    this.linearLayout = linearLayout;
    this.productNamePf = productNamePf;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUserProductReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUserProductReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_user_product_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUserProductReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline12;
      Guideline guideline12 = ViewBindings.findChildViewById(rootView, id);
      if (guideline12 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.item_product_Img_review;
      ShapeableImageView itemProductImgReview = ViewBindings.findChildViewById(rootView, id);
      if (itemProductImgReview == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.product_namePf;
      TextView productNamePf = ViewBindings.findChildViewById(rootView, id);
      if (productNamePf == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ItemUserProductReviewBinding((ConstraintLayout) rootView, guideline12, imageView,
          itemProductImgReview, linearLayout, productNamePf, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
