// Generated by view binder compiler. Do not edit!
package com.app.blingy.reauty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.blingy.reauty.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout abLayout;

  @NonNull
  public final MaterialCardView containerBeautyTip;

  @NonNull
  public final LinearLayout containerInsideScrollView;

  @NonNull
  public final ScrollView containerScrollHome;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView rvMain;

  @NonNull
  public final RecyclerView rvTips;

  @NonNull
  public final SearchView search;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final MaterialTextView tvTitleTips;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout abLayout,
      @NonNull MaterialCardView containerBeautyTip, @NonNull LinearLayout containerInsideScrollView,
      @NonNull ScrollView containerScrollHome, @NonNull ProgressBar progress,
      @NonNull RecyclerView rvMain, @NonNull RecyclerView rvTips, @NonNull SearchView search,
      @NonNull MaterialToolbar toolbar, @NonNull MaterialTextView tvTitleTips) {
    this.rootView = rootView;
    this.abLayout = abLayout;
    this.containerBeautyTip = containerBeautyTip;
    this.containerInsideScrollView = containerInsideScrollView;
    this.containerScrollHome = containerScrollHome;
    this.progress = progress;
    this.rvMain = rvMain;
    this.rvTips = rvTips;
    this.search = search;
    this.toolbar = toolbar;
    this.tvTitleTips = tvTitleTips;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ab_layout;
      AppBarLayout abLayout = ViewBindings.findChildViewById(rootView, id);
      if (abLayout == null) {
        break missingId;
      }

      id = R.id.container_beauty_tip;
      MaterialCardView containerBeautyTip = ViewBindings.findChildViewById(rootView, id);
      if (containerBeautyTip == null) {
        break missingId;
      }

      id = R.id.container_inside_scroll_view;
      LinearLayout containerInsideScrollView = ViewBindings.findChildViewById(rootView, id);
      if (containerInsideScrollView == null) {
        break missingId;
      }

      id = R.id.container_scroll_home;
      ScrollView containerScrollHome = ViewBindings.findChildViewById(rootView, id);
      if (containerScrollHome == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rv_main;
      RecyclerView rvMain = ViewBindings.findChildViewById(rootView, id);
      if (rvMain == null) {
        break missingId;
      }

      id = R.id.rv_tips;
      RecyclerView rvTips = ViewBindings.findChildViewById(rootView, id);
      if (rvTips == null) {
        break missingId;
      }

      id = R.id.search;
      SearchView search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_title_tips;
      MaterialTextView tvTitleTips = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleTips == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, abLayout, containerBeautyTip,
          containerInsideScrollView, containerScrollHome, progress, rvMain, rvTips, search, toolbar,
          tvTitleTips);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
