// Generated by view binder compiler. Do not edit!
package com.app.blingy.reauty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.blingy.reauty.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTagBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView imvAvatar;

  @NonNull
  public final MaterialTextView tvCountPost;

  @NonNull
  public final MaterialTextView tvTagName;

  @NonNull
  public final MaterialTextView tvTextPost;

  private ItemTagBinding(@NonNull ConstraintLayout rootView, @NonNull ShapeableImageView imvAvatar,
      @NonNull MaterialTextView tvCountPost, @NonNull MaterialTextView tvTagName,
      @NonNull MaterialTextView tvTextPost) {
    this.rootView = rootView;
    this.imvAvatar = imvAvatar;
    this.tvCountPost = tvCountPost;
    this.tvTagName = tvTagName;
    this.tvTextPost = tvTextPost;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTagBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTagBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_tag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTagBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imv_avatar;
      ShapeableImageView imvAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imvAvatar == null) {
        break missingId;
      }

      id = R.id.tv_count_post;
      MaterialTextView tvCountPost = ViewBindings.findChildViewById(rootView, id);
      if (tvCountPost == null) {
        break missingId;
      }

      id = R.id.tv_tag_name;
      MaterialTextView tvTagName = ViewBindings.findChildViewById(rootView, id);
      if (tvTagName == null) {
        break missingId;
      }

      id = R.id.tv_text_post;
      MaterialTextView tvTextPost = ViewBindings.findChildViewById(rootView, id);
      if (tvTextPost == null) {
        break missingId;
      }

      return new ItemTagBinding((ConstraintLayout) rootView, imvAvatar, tvCountPost, tvTagName,
          tvTextPost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
